//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity providersEntity { get { return GetGroup(GameMatcher.Providers).GetSingleEntity(); } }
    public Taiga.Core.Providers providers { get { return providersEntity.providers; } }
    public bool hasProviders { get { return providersEntity != null; } }

    public GameEntity SetProviders(System.Collections.Generic.Dictionary<System.Type, Taiga.Core.IProvider> newProviders) {
        if (hasProviders) {
            throw new Entitas.EntitasException("Could not set Providers!\n" + this + " already has an entity with Taiga.Core.Providers!",
                "You should check if the context already has a providersEntity before setting it or use context.ReplaceProviders().");
        }
        var entity = CreateEntity();
        entity.AddProviders(newProviders);
        return entity;
    }

    public void ReplaceProviders(System.Collections.Generic.Dictionary<System.Type, Taiga.Core.IProvider> newProviders) {
        var entity = providersEntity;
        if (entity == null) {
            entity = SetProviders(newProviders);
        } else {
            entity.ReplaceProviders(newProviders);
        }
    }

    public void RemoveProviders() {
        providersEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Taiga.Core.Providers providers { get { return (Taiga.Core.Providers)GetComponent(GameComponentsLookup.Providers); } }
    public bool hasProviders { get { return HasComponent(GameComponentsLookup.Providers); } }

    public void AddProviders(System.Collections.Generic.Dictionary<System.Type, Taiga.Core.IProvider> newProviders) {
        var index = GameComponentsLookup.Providers;
        var component = (Taiga.Core.Providers)CreateComponent(index, typeof(Taiga.Core.Providers));
        component.providers = newProviders;
        AddComponent(index, component);
    }

    public void ReplaceProviders(System.Collections.Generic.Dictionary<System.Type, Taiga.Core.IProvider> newProviders) {
        var index = GameComponentsLookup.Providers;
        var component = (Taiga.Core.Providers)CreateComponent(index, typeof(Taiga.Core.Providers));
        component.providers = newProviders;
        ReplaceComponent(index, component);
    }

    public void RemoveProviders() {
        RemoveComponent(GameComponentsLookup.Providers);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherProviders;

    public static Entitas.IMatcher<GameEntity> Providers {
        get {
            if (_matcherProviders == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Providers);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherProviders = matcher;
            }

            return _matcherProviders;
        }
    }
}
